# Simple workflow for deploying static content to GitHub Pages
name: UNIQUE Documentation

on:
  # Runs on pushes targeting the default branches
  push:
    branches: ["main", "master", "docs"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy-documentation:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    # Sets default bash to track changes to .bashrc or .profilerc
    # See: https://github.com/conda-incubator/setup-miniconda?tab=readme-ov-file#important
    defaults:
      run:
        shell: bash -el {0}
    # Steps to run to correctly deploy documentation
    steps:
      - name: Checkout repository contents
        uses: actions/checkout@v4

      # Install dependencies
      - name: Install UNIQUE dependencies
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: .conda/unique
          environment-file: unique-environment.yml
          auto-activate-base: false

      - name: Create UNIQUE Jupyter kernel
        run: make jupyter-kernel

      # # Cache or restore executed notebooks
      # - name: Cache/Restore Jupyter notebooks
      #   id: jupyter-nb-cache
      #   uses: actions/cache@v4
      #   env:
      #     cache-name: unique-example-notebooks
      #   with:
      #     path: ./docs/.jupyter_cache/
      #     key: ${{ env.cache-name }}-cache-${{ hashFiles('./notebooks/**/*.ipynb') }}
      #     restore-keys: |
      #       ${{ env.cache-name }}-cache-
      #       ${{ env.cache-name }}-

      # Install UNIQUE with dev dependencies
      - name: Install UNIQUE
        run: pip install -e .[dev]

      # Build documentation
      - name: Build UNIQUE documentation
        run: make docs

      # Setup GitHub pages and deploy documentation
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload HTML artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs/build/html'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
